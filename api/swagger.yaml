openapi: 3.0.0
info:
  title: Todo app OAS
  description: OpenApi specification for a todo application
  version: 1.0.0
servers:
- url: http://localhost:8081/
paths:
  /todos:
    get:
      description: Returns all todos
      operationId: getTodos
      responses:
        "200":
          description: get all todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
                x-content-type: application/json
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new todo
      operationId: createTodo
      requestBody:
        description: Todo to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        "201":
          description: Todo creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todo/status/{status}:
    get:
      description: Returns all the todos with the given status
      operationId: getTodosWithStatus
      parameters:
      - name: status
        in: path
        description: the status of the task
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: get all todos with given status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
                x-content-type: application/json
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todos/{todoId}:
    put:
      description: "Updates the status, assignee and/or priority of a todo"
      operationId: updateTodo
      parameters:
      - name: todoId
        in: path
        description: Id of the todo
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: "status, assignee and/or priority of the todo"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_body'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: delete a todo
      operationId: deleteTodo
      parameters:
      - name: todoId
        in: path
        description: Id of the todo
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Todo:
      required:
      - description
      - priority
      - reporter
      - responsibility
      - status
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: My Text.
        title:
          type: string
          example: My Task.
        reporter:
          $ref: '#/components/schemas/User'
        assignee:
          $ref: '#/components/schemas/User'
        responsibility:
          type: string
          enum:
          - development
        status:
          type: string
          enum:
          - created
          - on_hold
          - in_progress
          - done
          - invalid
        priority:
          type: string
          enum:
          - high
          - middle
          - low
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        responsibility: development
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        reporter:
          firstname: firstname
          role: development
          surname: surname
          id: 6
          email: ""
        id: 0
        title: title
        priority: high
        status: created
    User:
      required:
      - email
      - firstname
      - role
      - surname
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        firstname:
          type: string
          example: Abc
        surname:
          type: string
          example: xyz
        email:
          type: string
          format: email
          example: abc.xyz@example.com
        role:
          type: string
          example: development
          enum:
          - development
      example:
        firstname: firstname
        role: development
        surname: surname
        id: 6
        email: ""
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    update_body:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        assignee:
          type: string
        status:
          type: string
          enum:
          - on_hold
          - working
          - done
        priority:
          type: string
          enum:
          - high
          - middle
          - low
